/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/GcjpZlpzbxT
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"

export function Multi() {
  const [videoUrls, setVideoUrls] = useState([
    "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    "https://www.youtube.com/watch?v=oHg5SJYRHA0",
    "https://www.youtube.com/watch?v=jNQXAC9IVRw",
    "https://www.youtube.com/watch?v=dGR65RWiwCU",
    "https://www.youtube.com/watch?v=kXYiU_JCYtU",
    "https://www.youtube.com/watch?v=NN75im_us4k",
    "https://www.youtube.com/watch?v=pAgnJDJN4VA",
    "https://www.youtube.com/watch?v=oUFJJNQGwhk",
  ])
  const [displayMode, setDisplayMode] = useState(4)
  const handleDisplayModeChange = (mode) => {
    setDisplayMode(mode)
  }
  const handleVideoUrlChange = (index, url) => {
    const updatedUrls = [...videoUrls]
    updatedUrls[index] = url
    setVideoUrls(updatedUrls)
  }
  return (
    (<div className="flex flex-col gap-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">Multi-Video Watcher</h1>
        <div className="flex items-center gap-2">
          <span className="text-muted-foreground">Display Mode:</span>
          <Button
            variant={displayMode === 2 ? "solid" : "outline"}
            onClick={() => handleDisplayModeChange(2)}
            className="px-3 py-1 text-sm">
            2
          </Button>
          <Button
            variant={displayMode === 4 ? "solid" : "outline"}
            onClick={() => handleDisplayModeChange(4)}
            className="px-3 py-1 text-sm">
            4
          </Button>
          <Button
            variant={displayMode === 6 ? "solid" : "outline"}
            onClick={() => handleDisplayModeChange(6)}
            className="px-3 py-1 text-sm">
            6
          </Button>
          <Button
            variant={displayMode === 8 ? "solid" : "outline"}
            onClick={() => handleDisplayModeChange(8)}
            className="px-3 py-1 text-sm">
            8
          </Button>
        </div>
      </div>
      <div
        className={`grid gap-4 ${
          displayMode === 2
            ? "sm:grid-cols-2"
            : displayMode === 4
            ? "sm:grid-cols-2 md:grid-cols-2"
            : displayMode === 6
            ? "sm:grid-cols-2 md:grid-cols-3"
            : "sm:grid-cols-2 md:grid-cols-4"
        }`}>
        {videoUrls.slice(0, displayMode).map((url, index) => (
          <div key={index} className="relative">
            <input
              type="text"
              value={url}
              onChange={(e) => handleVideoUrlChange(index, e.target.value)}
              className="absolute top-2 left-2 z-10 w-full max-w-[200px] rounded-md bg-background px-3 py-1 text-sm shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2" />
            <div className="aspect-video overflow-hidden rounded-lg">
              <iframe
                src={url}
                frameBorder="0"
                allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
                className="w-full h-full" />
            </div>
          </div>
        ))}
      </div>
    </div>)
  );
}
